// ServicoPagamento.idl
interface ServicoPagamento {
    readonly attribute string nomeServico;
    readonly attribute string versaoServico;

    // Operações de pagamento
    ComprovantePagamento pagarConta(
        in string numeroConta,
        in ContaPagamento contaPagar
    ) raises (SaldoInsuficiente, ContaInvalida, ServicoIndisponivel);

    ComprovantePagamento agendarPagamento(
        in string numeroConta,
        in ContaPagamento conta,
        in data dataPagamento
    ) raises (ContaInvalida, DataInvalida, ServicoIndisponivel);

    // Gestão de contas
    ContaPagamento[] obterContasPendentes(in string numeroConta)
        raises (ContaNaoEncontrada, ServicoIndisponivel);

    ContaPagamento[] obterContasPagas(in string numeroConta, in data dataInicio, in data dataFim)
        raises (ContaNaoEncontrada, ServicoIndisponivel);

    boolean registrarNovaConta(in string numeroConta, in ContaPagamento novaConta)
        raises (ContaNaoEncontrada, ContaInvalida, ServicoIndisponivel);

    // Consultas
    ComprovantePagamento obterComprovantePagamento(in string idComprovante)
        raises (ComprovanteNaoEncontrado, ServicoIndisponivel);

    ComprovantePagamento[] obterHistoricoPagamentos(in string numeroConta, in data dataInicio, in data dataFim)
        raises (ContaNaoEncontrada, ServicoIndisponivel);

    // Status do serviço
    string obterStatusServico();
    string obterMetodosPagamentoDisponiveis();
};